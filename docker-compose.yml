version: '3.8'

services:
  ai-userbot:
    build: .
    container_name: ai-userbot
    restart: unless-stopped
    environment:
      # Telegram credentials
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_PHONE_NUMBER=${TELEGRAM_PHONE_NUMBER}
      
      # LLM credentials (optional)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      
      # Promoted bot info
      - PROMOTED_BOT_USERNAME=${PROMOTED_BOT_USERNAME}
      - PROMOTED_BOT_NAME=${PROMOTED_BOT_NAME}
      
      # Timezone
      - TZ=Europe/Moscow
    volumes:
      # Persist data between restarts
      - ./data:/app/data
      - ./logs:/app/logs
      - ./configs:/app/configs
      - ./.env:/app/.env:ro
      
      # Session files
      - ./userbot_session.session:/app/userbot_session.session
      - ./userbot_session.session-journal:/app/userbot_session.session-journal
    networks:
      - userbot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Database for production use
  postgres:
    image: postgres:16-alpine
    container_name: userbot-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=userbot
      - POSTGRES_USER=userbot
      - POSTGRES_PASSWORD=${DB_PASSWORD:-userbot_secret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - userbot-network
    profiles:
      - production

networks:
  userbot-network:
    driver: bridge

volumes:
  postgres_data:
