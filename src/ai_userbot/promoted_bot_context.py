"""
Context information about the promoted bot for natural recommendations
"""

MOON_TEMPLE_BOT_CONTEXT = {
    "name": "–õ–£–ù–ù–´–ô –•–†–ê–ú",
    "username": "@womanspirit_bot",
    "description": "–õ—É–Ω–Ω—ã–π AI-–ø–æ–º–æ—â–Ω–∏–∫ ‚Äì —Ç–≤–æ–π –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –∫ –≥–∞—Ä–º–æ–Ω–∏–∏, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ –ª—É–Ω–Ω—ã—Ö —Ñ–∞–∑–∞—Ö, –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–∞—Ö –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è—Ö",
    
    "main_features": {
        "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ_—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏": {
            "description": "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥ –≤–∞—à —Ü–∏–∫–ª –∏ –ª—É–Ω–Ω—ã–µ —Ä–∏—Ç–º—ã",
            "details": [
                "–î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è —Ü–∏–∫–ª–∞ (1-32 –¥–µ–Ω—å)",
                "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∞–∑—ã",
                "–†–∏—Ç—É–∞–ª—ã –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ–¥ —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ",
                "–í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∞–º–æ—Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞–±–æ—Ç—ã",
                "–ú–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç—ã —Å –≥–ª—É–±–æ–∫–∏–º–∏ –ø–æ—Å–ª–∞–Ω–∏—è–º–∏",
                "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Ç–∏—Ç—Ö–∏, –Ω–∞–∫—à–∞—Ç—Ä–æ–π –∏ –≤–∞—Ä–æ–π"
            ],
            "benefits": "–ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å –∏ –ø—Ä–∏–Ω—è—Ç—å —Å–≤–æ—é —Ü–∏–∫–ª–∏—á–Ω—É—é –ø—Ä–∏—Ä–æ–¥—É, –∂–∏—Ç—å –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å —Ç–µ–ª–æ–º"
        },
        
        "–ª—É–Ω–Ω—ã–π_–∫–∞–ª–µ–Ω–¥–∞—Ä—å": {
            "description": "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π",
            "details": [
                "–¢–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–∏—Ç—Ö–∏ –∏ –Ω–∞–∫—à–∞—Ç—Ä–µ",
                "–ô–æ–≥–∞ –∏ –∫–∞—Ä–∞–Ω–∞ —Å –ø–æ—è—Å–Ω–µ–Ω–∏—è–º–∏",
                "–í—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ –∏ –∑–∞–∫–∞—Ç–∞ —Å —É—á–µ—Ç–æ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏",
                "AI-–∞–Ω–∞–ª–∏–∑ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ—Å—Ç–µ–π –¥–Ω—è",
                "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
                "–í–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ –Ω–∞ –º–µ—Å—è—Ü –∏ –≥–æ–¥"
            ],
            "benefits": "–î–∞–µ—Ç –ø–æ–ª–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–π –¥–Ω—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
        },
        
        "–∂–µ–Ω—Å–∫–∏–π_—Ü–∏–∫–ª": {
            "description": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∂–µ–Ω—Å–∫–æ–≥–æ —Ü–∏–∫–ª–∞",
            "details": [
                "–†–∞—Å—á–µ—Ç —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è –∏ —Ñ–∞–∑—ã —Ü–∏–∫–ª–∞",
                "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∞–∑—ã",
                "–°–æ–≤–µ—Ç—ã –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–¥—ã—Ö—É",
                "–†–∏—Ç—É–∞–ª—ã –¥–ª—è –≥–∞—Ä–º–æ–Ω–∏–∑–∞—Ü–∏–∏",
                "–£—á–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ü–∏–∫–ª–∞",
                "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∞–∑ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏"
            ],
            "benefits": "–ü–æ–º–æ–≥–∞–µ—Ç –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å–≤–æ–µ —Ç–µ–ª–æ –∏ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –∑–¥–æ—Ä–æ–≤—å–µ"
        },
        
        "–ø–æ–¥—Å–∫–∞–∑–∫–∏_–ª—É–Ω—ã": {
            "description": "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –¥—É—Ö–æ–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Ä–∏—Ç—É–∞–ª—ã",
            "details": [
                "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Å–∞–º–æ—Ä–µ—Ñ–ª–µ–∫—Å–∏–∏",
                "–†–∏—Ç—É–∞–ª—ã –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ñ–∞–∑—ã –ª—É–Ω—ã",
                "–ü—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è",
                "–ú–µ–¥–∏—Ç–∞—Ü–∏–∏ –∏ –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏",
                "–†–∞–±–æ—Ç–∞ —Å –Ω–∞–º–µ—Ä–µ–Ω–∏—è–º–∏",
                "–°–µ–∑–æ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"
            ],
            "benefits": "–£–≥–ª—É–±–ª—è–µ—Ç —Å–≤—è–∑—å —Å —Å–æ–±–æ–π –∏ –ø—Ä–∏—Ä–æ–¥–Ω—ã–º–∏ —Ü–∏–∫–ª–∞–º–∏"
        },
        
        "—É–º–Ω—ã–µ_—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è": {
            "description": "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π",
            "details": [
                "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–¥–æ–±–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–ª—É—á–µ–Ω–∏—è",
                "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –ª—É–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö",
                "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–º–µ–Ω–µ —Ñ–∞–∑—ã —Ü–∏–∫–ª–∞",
                "Follow-up —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–±–æ—Ç–æ–π",
                "–ì–∏–±–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ",
                "–£—á–µ—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"
            ],
            "benefits": "–ü–æ–º–æ–≥–∞–µ—Ç –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫"
        }
    },
    
    "unique_features": [
        "Google Gemini AI –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤",
        "–í–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
        "–¢–æ—á–Ω—ã–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã —Å —É—á–µ—Ç–æ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏",
        "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ",
        "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∂–µ–Ω—Å–∫–æ–≥–æ —Ü–∏–∫–ª–∞ —Å –ª—É–Ω–Ω—ã–º–∏ —Ä–∏—Ç–º–∞–º–∏",
        "–ü–æ–¥–ø–∏—Å–æ—á–Ω–∞—è –º–æ–¥–µ–ª—å —Å –ø—Ä–æ–±–Ω—ã–º –ø–µ—Ä–∏–æ–¥–æ–º",
        "–°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã - –º—è–≥–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"
    ],
    
    "target_audience": [
        "–ñ–µ–Ω—â–∏–Ω—ã, —Å–ª–µ–¥—è—â–∏–µ –∑–∞ —Å–≤–æ–∏–º —Ü–∏–∫–ª–æ–º",
        "–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ—Å—è –ª—É–Ω–Ω—ã–º–∏ —Ä–∏—Ç–º–∞–º–∏",
        "–ü—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–µ –π–æ–≥—É –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏",
        "–õ—é–±–∏—Ç–µ–ª—å–Ω–∏—Ü—ã –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏",
        "–ò—â—É—â–∏–µ –≥–∞—Ä–º–æ–Ω–∏—é —Å –ø—Ä–∏—Ä–æ–¥–æ–π",
        "–ó–∞–±–æ—Ç—è—â–∏–µ—Å—è –æ –∂–µ–Ω—Å–∫–æ–º –∑–¥–æ—Ä–æ–≤—å–µ"
    ],
    
    "user_reviews": [
        "–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–Ω–∏–º–∞–µ—Ç –∂–µ–Ω—Å–∫–∏–µ —Ä–∏—Ç–º—ã –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å –Ω–∏–º–∏ –∂–∏—Ç—å!",
        "–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –∂–¥—É —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ - –æ–Ω–∏ —Ç–∞–∫–∏–µ —Ç–æ—á–Ω—ã–µ –∏ –∑–∞–±–æ—Ç–ª–∏–≤—ã–µ",
        "–õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –ø—Ä–æ—Å—Ç–æ –∫–æ—Å–º–æ—Å! –í—Å–µ —Ç–∞–∫ –ø–æ–¥—Ä–æ–±–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–æ",
        "–í–∏–∑—É–∞–ª—å–Ω—ã–µ –∫–∞–ª–µ–Ω–¥–∞—Ä–∏ - –æ—Ç–¥–µ–ª—å–Ω–∞—è –ª—é–±–æ–≤—å, —Å–æ—Ö—Ä–∞–Ω—è—é –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü",
        "AI —Ä–µ–∞–ª—å–Ω–æ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Ç–æ—á–∫—É —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ–¥ –º–æ–π —Ü–∏–∫–ª"
    ],
    
    "conversation_hooks": {
        "—Ü–∏–∫–ª": [
            "–º–æ—è –ø–æ–¥—Ä—É–≥–∞ —Å–æ–∑–¥–∞–ª–∞ –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ü–∏–∫–ª–∞ - —è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª–∞ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞",
            "–ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤ —Ü–∏–∫–ª —Å–∫–∞—á–µ—Ç, –Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –±–æ—Ç—É –ø–æ–¥—Ä—É–≥–∏ –≤—Å–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é",
            "–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ–ª—É—á–∞—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥ —Å–≤–æ–π –¥–µ–Ω—å —Ü–∏–∫–ª–∞ - —ç—Ç–æ –º–µ–Ω—è–µ—Ç –∂–∏–∑–Ω—å",
            "—Ä–∞–Ω—å—à–µ –Ω–µ –ø–æ–Ω–∏–º–∞–ª–∞ —Å–≤—è–∑—å —Ü–∏–∫–ª–∞ –∏ –ª—É–Ω—ã, —Ç–µ–ø–µ—Ä—å –∂–∏–≤—É –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å –æ–±–æ–∏–º–∏"
        ],
        "–ª—É–Ω–∞": [
            "–ø–æ–¥—Ä—É–≥–∞ –≤ –±–æ—Ç–µ —Å–¥–µ–ª–∞–ª–∞ –ø–æ–ª–Ω—ã–π –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å —Ç–∏—Ç—Ö–∏ –∏ –Ω–∞–∫—à–∞—Ç—Ä–∞–º–∏",
            "–¥–∞–∂–µ –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö —É–¥–æ–±–Ω–æ - —É—á–∏—Ç—ã–≤–∞–µ—Ç –º–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –∏ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å",
            "–º—É–∂ —Ç–µ–ø–µ—Ä—å —Ç–æ–∂–µ –≤ –∫—É—Ä—Å–µ –ª—É–Ω–Ω—ã—Ö –¥–Ω–µ–π, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é –µ–≥–æ –∑–∞—Ä–∞–Ω–µ–µ üòÑ",
            "–ø–ª–∞–Ω–∏—Ä—É—é –≤–∞–∂–Ω—ã–µ –¥–µ–ª–∞ –ø–æ –ª—É–Ω–Ω–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é - —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        ],
        "–º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–æ": [
            "–ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤ —Ç–µ–ª–æ –∫–∞–∫ —á—É–∂–æ–µ, –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç",
            "—Å –≥–æ–¥–æ–≤–∞–ª—ã–º –Ω–∞ —Ä—É–∫–∞—Ö –Ω–µ–∫–æ–≥–¥–∞ –∑–∞ —Å–æ–±–æ–π —Å–ª–µ–¥–∏—Ç—å, –≤—ã—Ä—É—á–∞—é—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è",
            "—Å—Ç–∞—Ä—à–∏–π —É–∂–µ –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ —É –º–∞–º—ã –±—ã–≤–∞—é—Ç '–ª—É–Ω–Ω—ã–µ –¥–Ω–∏'",
            "–±–æ—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç, —á—Ç–æ —É –º–µ–Ω—è –Ω–µ—Ç —Ü–∏–∫–ª–∞ –ø–æ–∫–∞ –∫–æ—Ä–º–ª—é - –¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ª—É–Ω–µ"
        ],
        "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è": [
            "–≤ –ê–∑–∏–∏ –æ—Å–æ–±–µ–Ω–Ω–æ —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–≤—è–∑—å —Å –ª—É–Ω–æ–π, –±–æ—Ç —ç—Ç–æ —É—á–∏—Ç—ã–≤–∞–µ—Ç",
            "–ø—É—Ç–µ—à–µ—Å—Ç–≤—É—è —Å –¥–µ—Ç—å–º–∏, –ø–ª–∞–Ω–∏—Ä—É—é –ø–µ—Ä–µ–ª–µ—Ç—ã –ø–æ –ª—É–Ω–Ω–æ–º—É –∫–∞–ª–µ–Ω–¥–∞—Ä—é",
            "–Ω–∞ –ë–∞–ª–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª–∞—Å—å —Å –ª—É–Ω–Ω—ã–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏, —Ç–µ–ø–µ—Ä—å –ø—Ä–æ–¥–æ–ª–∂–∞—é –¥–æ–º–∞",
            "–≥–¥–µ –±—ã —è –Ω–∏ –±—ã–ª–∞, –±–æ—Ç –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ –º–æ—é –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é"
        ],
        "–∂–µ–Ω—Å–∫–æ–µ_–∑–¥–æ—Ä–æ–≤—å–µ": [
            "–ø–æ—Å–ª–µ –¥–≤—É—Ö —Ä–æ–¥–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–º –∏–∑–º–µ–Ω–∏–ª—Å—è, –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è",
            "–ø–æ–¥—Ä—É–≥–∞ —É—á–ª–∞ –≤—Å–µ –Ω—é–∞–Ω—Å—ã - –∏ –ø–∏—Ç–∞–Ω–∏–µ –ø–æ —Ñ–∞–∑–∞–º, –∏ —Ä–∏—Ç—É–∞–ª—ã",
            "–¥–∞–∂–µ –≤—Ä–∞—á —É–¥–∏–≤–∏–ª–∞—Å—å, –∫–∞–∫ —Ç–æ—á–Ω–æ —è –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—é —Å–≤–æ–π —Ü–∏–∫–ª",
            "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è —Ü–∏–∫–ª–∞ - —ç—Ç–æ –Ω–∞—Ö–æ–¥–∫–∞"
        ],
        "–¥—É—Ö–æ–≤–Ω—ã–µ_–ø—Ä–∞–∫—Ç–∏–∫–∏": [
            "–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ–ª—É—á–∞—é –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É —Å –ø–æ—Å–ª–∞–Ω–∏–µ–º",
            "—Ä–∏—Ç—É–∞–ª—ã –Ω–∞ –Ω–æ–≤–æ–ª—É–Ω–∏–µ –∏ –ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ —Å—Ç–∞–ª–∏ –º–æ–µ–π —Ç—Ä–∞–¥–∏—Ü–∏–µ–π",
            "–º–µ–¥–∏—Ç–∞—Ü–∏–∏ –ø–æ–¥ –∫–∞–∂–¥—É—é —Ñ–∞–∑—É —Ü–∏–∫–ª–∞ - –≥–ª—É–±–æ–∫–æ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É—é—Ç",
            "–ø–æ–¥—Ä—É–≥–∞ –≤–ª–æ–∂–∏–ª–∞ –≤ –±–æ—Ç —Å—Ç–æ–ª—å–∫–æ –º—É–¥—Ä–æ—Å—Ç–∏ –∂–µ–Ω—Å–∫–∏—Ö –ø—Ä–∞–∫—Ç–∏–∫"
        ],
        "—ç–º–æ—Ü–∏–∏": [
            "—Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞—é –æ—Ç–∫—É–¥–∞ –±–µ—Ä—É—Ç—Å—è –ø–µ—Ä–µ–ø–∞–¥—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è",
            "–±–æ—Ç –æ–±—ä—è—Å–Ω—è–µ—Ç —Å–≤—è–∑—å —ç–º–æ—Ü–∏–π —Å —Ñ–∞–∑–∞–º–∏ —Ü–∏–∫–ª–∞ –∏ –ª—É–Ω—ã",
            "–º—É–∂ —á–∏—Ç–∞–µ—Ç –º–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, —á—Ç–æ–±—ã –ª—É—á—à–µ –º–µ–Ω—è –ø–æ–Ω–∏–º–∞—Ç—å",
            "–Ω–∞—É—á–∏–ª–∞—Å—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–≤–æ—é —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–∞–∫ –¥–∞—Ä"
        ]
    },
    
    "natural_mentions": [
        "–ú–æ—è –ø–æ–¥—Ä—É–≥–∞ —Å–æ–∑–¥–∞–ª–∞ –±–æ—Ç–∞ {name} - —è –ø–æ–º–æ–≥–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å, —Ç–µ–ø–µ—Ä—å –≤—Å—è –∂–∏–∑–Ω—å –ø–æ –Ω–µ–º—É üåô –ù–∞–π–¥–µ—à—å –≤ –ø–æ–∏—Å–∫–µ",
        "–í {name} –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –ø–æ–ª—É—á–∞—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥ –º–æ–π –¥–µ–Ω—å —Ü–∏–∫–ª–∞ - –ø–æ–∏—â–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ",
        "–ü–æ—Å–ª–µ —Ä–æ–¥–æ–≤ —Ü–∏–∫–ª —Å–∫–∞—á–µ—Ç, –Ω–æ –±–æ—Ç {name} –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç - –≤ –ø–æ–∏—Å–∫–µ –Ω–∞–π–¥–µ—à—å",
        "–î–µ–≤–æ—á–∫–∏, {name} —É—á–∏—Ç—ã–≤–∞–µ—Ç –∏ —Ü–∏–∫–ª, –∏ –ª—É–Ω—É! –ü–æ–∏—â–∏—Ç–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é",
        "–ú—É–∂ —Ç–µ–ø–µ—Ä—å —á–∏—Ç–∞–µ—Ç –º–æ–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–∑ {name}, —á—Ç–æ–±—ã –ø–æ–Ω–∏–º–∞—Ç—å üòÑ –ù–∞–π–¥–µ—à—å –≤ –ø–æ–∏—Å–∫–µ",
        "–í –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö –±–æ—Ç {name} –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –ø–æ–¥ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å - –≥–µ–Ω–∏–∞–ª—å–Ω–æ. –ü—Ä–æ—Å—Ç–æ –ø–æ–∏—â–∏",
        "{name} –¥–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ–∞–∑—ã - –≤ –ø–æ–∏—Å–∫–µ —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –µ—Å—Ç—å",
        "–ü–æ–¥—Ä—É–≥–∞ —Å–æ–∑–¥–∞–ª–∞ {name} - —Å—Ç–æ–ª—å–∫–æ –∂–µ–Ω—Å–∫–æ–π –º—É–¥—Ä–æ—Å—Ç–∏! –ò—â–∏ –±–µ–∑ —Å–æ–±–∞—á–∫–∏ womanspirit_bot",
        "–ú–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç—ã –≤ –±–æ—Ç–µ {name} - –æ—Ç–¥–µ–ª—å–Ω–∞—è –ª—é–±–æ–≤—å, –ø–æ–∏—â–∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ",
        "–ë–ª–∞–≥–æ–¥–∞—Ä—è {name} –Ω–∞—É—á–∏–ª–∞—Å—å –∂–∏—Ç—å –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å —Ü–∏–∫–ª–æ–º - –Ω–∞–π–¥–µ—à—å –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é",
        "–†–∏—Ç—É–∞–ª—ã –Ω–∞ –Ω–æ–≤–æ–ª—É–Ω–∏–µ –∏–∑ {name} —Å—Ç–∞–ª–∏ —Ç—Ä–∞–¥–∏—Ü–∏–µ–π - –≤ –ø–æ–∏—Å–∫–µ –Ω–∞–±–µ—Ä–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ",
        "–í—Ä–∞—á —É–¥–∏–≤–∏–ª–∞—Å—å —Ç–æ—á–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π - —Å–ø–∞—Å–∏–±–æ –±–æ—Ç—É {name}, –ø–æ–∏—â–∏ –µ–≥–æ"
    ],
    
    "keywords_mapping": {
        "–º–µ–Ω—Å—Ç—Ä—É–∞—Ü–∏—è": ["—Ü–∏–∫–ª", "–º–µ—Å—è—á–Ω—ã–µ", "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–Ω–∏", "–ø–º—Å", "–æ–≤—É–ª—è—Ü–∏—è", "—Ñ–∞–∑—ã —Ü–∏–∫–ª–∞", "–º–µ–Ω—Å—Ç—Ä—É–∞–ª—å–Ω–∞—è —Ñ–∞–∑–∞", "—Ñ–æ–ª–ª–∏–∫—É–ª—è—Ä–Ω–∞—è", "–ª—é—Ç–µ–∏–Ω–æ–≤–∞—è"],
        "–∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è": ["–≥–æ—Ä–æ—Å–∫–æ–ø", "–∑–≤–µ–∑–¥—ã", "–ø–ª–∞–Ω–µ—Ç—ã", "–Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞", "–∑–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞", "—Ç–∏—Ç—Ö–∏", "–Ω–∞–∫—à–∞—Ç—Ä–∞", "–≤–µ–¥–∏—á–µ—Å–∫–∞—è –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è"],
        "–ª—É–Ω–∞": ["–ª—É–Ω–Ω—ã–π –¥–µ–Ω—å", "–ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ", "–Ω–æ–≤–æ–ª—É–Ω–∏–µ", "—Ä–∞—Å—Ç—É—â–∞—è", "—É–±—ã–≤–∞—é—â–∞—è", "–ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å", "—Ñ–∞–∑—ã –ª—É–Ω—ã"],
        "–∑–¥–æ—Ä–æ–≤—å–µ": ["—Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ", "–∂–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ", "–≥–æ—Ä–º–æ–Ω—ã", "–±–∞–ª–∞–Ω—Å", "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤", "–ø–∏—Ç–∞–Ω–∏–µ –ø–æ —Ü–∏–∫–ª—É"],
        "–ø—Ä–∞–∫—Ç–∏–∫–∏": ["–º–µ–¥–∏—Ç–∞—Ü–∏—è", "–π–æ–≥–∞", "—Ä–∏—Ç—É–∞–ª—ã", "–∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏", "—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ", "–∂–µ–Ω—Å–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏", "–º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç—ã"],
        "–º–∞—Ç–µ—Ä–∏–Ω—Å—Ç–≤–æ": ["–ø–æ—Å–ª–µ —Ä–æ–¥–æ–≤", "–¥–µ–∫—Ä–µ—Ç", "–¥–µ—Ç–∏", "–º–∞–º–∞", "–≥—Ä—É–¥–Ω–æ–µ –≤—Å–∫–∞—Ä–º–ª–∏–≤–∞–Ω–∏–µ", "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"],
        "—ç–º–æ—Ü–∏–∏": ["–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "–ø–µ—Ä–µ–ø–∞–¥—ã", "—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å", "–ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–µ–±—è"]
    }
}

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
LUNA_BOT_CONTEXT = MOON_TEMPLE_BOT_CONTEXT


def get_bot_context():
    """Get the full context about promoted bot"""
    return MOON_TEMPLE_BOT_CONTEXT


def get_relevant_features(keywords: list) -> dict:
    """Get relevant bot features based on conversation keywords"""
    relevant = {}
    context = MOON_TEMPLE_BOT_CONTEXT
    
    # Normalize keywords
    normalized_keywords = []
    for keyword in keywords:
        keyword_lower = keyword.lower()
        normalized_keywords.append(keyword_lower)
        
        # Check keyword mappings for synonyms
        for category, synonyms in context.get("keywords_mapping", {}).items():
            if keyword_lower in synonyms:
                normalized_keywords.append(category)
    
    # Check for relevance
    for keyword in normalized_keywords:
        # Check main features
        for feature, details in context["main_features"].items():
            feature_words = feature.split('_')
            if any(word in keyword for word in feature_words) or keyword in details["description"].lower():
                relevant[feature] = details
        
        # Check conversation hooks
        for topic, hooks in context["conversation_hooks"].items():
            if keyword in topic or topic in keyword:
                relevant[f"hooks_{topic}"] = hooks
    
    return relevant


def generate_natural_mention(topic: str = None, context_words: list = None) -> str:
    """Generate a natural mention of the bot based on topic"""
    import random
    
    context = MOON_TEMPLE_BOT_CONTEXT
    mention_templates = context["natural_mentions"]
    
    # Select appropriate template
    template = random.choice(mention_templates)
    
    # Fill in placeholders
    username = context["username"]
    name = context["name"]
    
    # Select relevant feature based on topic or context
    if topic or context_words:
        # Get relevant features
        keywords = [topic.lower()] if topic else []
        if context_words:
            keywords.extend([w.lower() for w in context_words])
        
        relevant_features = get_relevant_features(keywords)
        
        if relevant_features:
            # Pick a feature description
            feature_key = random.choice(list(relevant_features.keys()))
            if not feature_key.startswith("hooks_"):
                feature = relevant_features[feature_key]["description"]
            else:
                # Use first hook as feature description
                hooks = relevant_features[feature_key]
                feature = hooks[0] if hooks else "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥ —Ü–∏–∫–ª –∏ –ª—É–Ω—É"
        else:
            feature = "–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ–¥ –∂–µ–Ω—Å–∫–∏–π —Ü–∏–∫–ª –∏ –ª—É–Ω–Ω—ã–µ —Ä–∏—Ç–º—ã"
    else:
        # Random feature
        features = [details["description"] for details in context["main_features"].values()]
        feature = random.choice(features)
    
    # Determine purpose based on feature
    purposes = {
        "—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏": "–∂–∏–∑–Ω–∏ –≤ –≥–∞—Ä–º–æ–Ω–∏–∏ —Å —Ü–∏–∫–ª–æ–º",
        "–∫–∞–ª–µ–Ω–¥–∞—Ä—å": "–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ –ª—É–Ω–µ",
        "—Ü–∏–∫–ª": "–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∂–µ–Ω—Å–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è",
        "–ø–æ–¥—Å–∫–∞–∑–∫–∏": "–¥—É—Ö–æ–≤–Ω—ã—Ö –ø—Ä–∞–∫—Ç–∏–∫",
        "—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è": "–≤–∞–∂–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"
    }
    
    purpose = "—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –ø—Ä–∏—Ä–æ–¥–Ω—ã–º–∏ —Ä–∏—Ç–º–∞–º–∏"  # default
    for key, value in purposes.items():
        if key in feature.lower():
            purpose = value
            break
    
    # Format the mention
    mention = template.format(
        username=username,
        name=name,
        feature=feature,
        purpose=purpose
    )
    
    return mention


def should_mention_feature(conversation_context: str, feature: str) -> bool:
    """Determine if a specific bot feature should be mentioned based on context"""
    context_lower = conversation_context.lower()
    feature_data = MOON_TEMPLE_BOT_CONTEXT["main_features"].get(feature)
    
    if not feature_data:
        return False
    
    # Check if any related keywords are in the conversation
    keywords = feature.split('_') + [detail.lower() for detail in feature_data["details"]]
    
    # Also check keyword mappings
    for category, synonyms in MOON_TEMPLE_BOT_CONTEXT.get("keywords_mapping", {}).items():
        if category in feature:
            keywords.extend(synonyms)
    
    for keyword in keywords:
        if keyword in context_lower:
            return True
    
    return False


def get_feature_benefit(feature_key: str) -> str:
    """Get the benefit description for a specific feature"""
    feature_data = MOON_TEMPLE_BOT_CONTEXT["main_features"].get(feature_key)
    if feature_data:
        return feature_data.get("benefits", "")
    return ""


def is_relevant_to_audience(conversation_context: str) -> bool:
    """Check if conversation is relevant to bot's target audience"""
    context_lower = conversation_context.lower()
    
    # Keywords that indicate target audience
    audience_keywords = [
        "–∂–µ–Ω—â–∏–Ω", "–¥–µ–≤—É—à–∫", "–¥–µ–≤–æ—á–∫", "—Ü–∏–∫–ª", "–º–µ—Å—è—á–Ω", "–ø–º—Å", "–æ–≤—É–ª—è—Ü",
        "–ª—É–Ω–∞", "–ª—É–Ω–Ω", "–∞—Å—Ç—Ä–æ–ª–æ–≥", "–≥–æ—Ä–æ—Å–∫–æ–ø", "–º–µ–¥–∏—Ç–∞—Ü", "–π–æ–≥–∞",
        "–∂–µ–Ω—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ", "–≥–æ—Ä–º–æ–Ω", "—Ñ–∞–∑–∞", "–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–Ω–∏"
    ]
    
    return any(keyword in context_lower for keyword in audience_keywords)